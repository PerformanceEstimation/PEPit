name: Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'master'
      - 'develop'

  push:
    branches:
      - 'master'
      - 'develop'

  create:
    branches:
      - 'master'
    tags:
      - '**'


jobs:
  linux:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'no ci')"
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
    - name: Update version in setup.py
      run: >-
        sed -i "s/{{VERSION_PLACEHOLDER}}/0.0.0/g" setup.py
    - name: Install PEPit
      run: |
        pip install -e .
    - name: Install MOSEK
      run: |
        pip install mosek
    - name: Setup MOSEK license, run tests and generate report
      env:
        MOSEKLM_LICENSE_FILE: ${{ secrets.MSK_LICENSE }}
      run: |
        coverage run -m unittest tests/test_*
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3


  linux_no_mosek:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'no ci')"
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
    - name: Update version in setup.py
      run: >-
        sed -i "s/{{VERSION_PLACEHOLDER}}/0.0.0/g" setup.py
    - name: Install PEPit
      run: |
        pip install -e .
    - name: Run tests and generate report
      run: |
        coverage run -m unittest tests/test_*
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3


  linux_no_mosek_license:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'no ci')"
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
    - name: Update version in setup.py
      run: >-
        sed -i "s/{{VERSION_PLACEHOLDER}}/0.0.0/g" setup.py
    - name: Install PEPit
      run: |
        pip install -e .
    - name: Setup MOSEK
      run: |
        pip install mosek
    - name: Run tests and generate report
      run: |
        coverage run -m unittest tests/test_*
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
